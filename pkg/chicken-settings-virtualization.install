_configure_incus(){
    INCUS_DIR=/home/_birb/incus

    # create incus directory
    if [ ! -d "$INCUS_DIR" ]; then
        mkdir --parents $INCUS_DIR
    else
        echo "$INCUS_DIR already exists."
    fi

    # create /var/lib/incus directory
    if [ ! -d "/nix" ]; then
        mkdir --parents /var/lib/incus/
    fi

    # add /home/_birb/incus to /etc/fstab
    if ! grep -q "^$INCUS_DIR" "/etc/fstab"; then
        echo "Generating incus fstab configuration..."
	cat << EOF >> /etc/fstab

# incus
/home/_birb/incus /var/lib/incus none bind 0 0
EOF
    else
        echo "incus fstab already exists."
    fi

    # mount /var/lib/incus
    if ! mountpoint -q /var/lib/incus; then
        mount /var/lib/incus
    fi

    systemctl stop incus.socket incus.service incus-user.socket
    systemctl start incus.socket incus.service incus-user.socket

    # check if "default" storage pool exists
    if ! incus storage list --format csv | grep -q '^default,'; then
        incus admin init --minimal
    else
        echo "Storage pool 'default' already exists."
    fi

    # check if user birb is part of incus group
    if ! getent group "incus" | grep "birb"; then
        usermod -aG incus birb
    else
        echo "User birb is already part of the incus group."
    fi
    # check if user birb is part of incus-admin group
    if ! getent group "incus-admin" | grep "birb"; then
        usermod -aG incus-admin birb
    else
        echo "User birb is already part of the incus-admin group."
    fi

    usermod -v 1000000-1000999999 -w 1000000-1000999999 root
}

post_upgrade(){
    _configure_incus
}

post_install(){
    post_upgrade
}
